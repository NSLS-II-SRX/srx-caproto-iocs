name: CI

on:
  workflow_dispatch:
  pull_request:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FORCE_COLOR: 3

jobs:
  pre-commit:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - uses: pre-commit/action@v3.0.1
        with:
          extra_args: --hook-stage manual --all-files
      - name: Run PyLint
        run: |
          echo "::add-matcher::$GITHUB_WORKSPACE/.github/matchers/pylint.json"
          pipx run nox -s pylint

  checks:
    # pull requests are a duplicate of a branch push if within the same repo.
    if:
      github.event_name != 'pull_request' ||
      github.event.pull_request.head.repo.full_name != github.repository

    name: Check Python ${{ matrix.python-version }} on ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    needs: [pre-commit]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        # runs-on: [ubuntu-latest, macos-latest, windows-latest]
        runs-on: [ubuntu-latest]

        # include:
        #   - python-version: pypy-3.10
        #     runs-on: ubuntu-latest
    env:
      TZ: America/New_York

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set env vars
        run: |
          set -x
          export REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}  # just the repo, as opposed to org/repo
          echo "REPOSITORY_NAME=${REPOSITORY_NAME}" >> $GITHUB_ENV

          export PYTHONVER=$(echo ${{ matrix.python-version }} | sed 's/\.//g')
          echo "PYTHONVER=${PYTHONVER}" >> $GITHUB_ENV

          export DATETIME_STRING=$(date +%Y%m%d%H%M%S)
          echo "DATETIME_STRING=${DATETIME_STRING}" >> $GITHUB_ENV

      # - uses: actions/setup-python@v5
      #   with:
      #     python-version: ${{ matrix.python-version }}
      #     allow-prereleases: true

      - name: Set up Python ${{ matrix.python-version }} with conda
        uses: mamba-org/setup-micromamba@v2
        with:
          init-shell: bash
          environment-name: ${{env.REPOSITORY_NAME}}-py${{matrix.python-version}}
          create-args: >-
            python=${{ matrix.python-version }} epics-base setuptools<67

      - name: Install package
        run: |
          set -vxeuo pipefail
          which caput
          python -m pip install .[test]

      - name: Test package
        run: >-
          python -m pytest -ra --cov --cov-report=xml --cov-report=term
          --durations=20 -m "(not hardware) and (not tiled)" -s -vv

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.REPOSITORY_NAME}}-py${{env.PYTHONVER}}-${{env.DATETIME_STRING}}
          path: /tmp/srx-caproto-iocs/
          retention-days: 14

      - name: Upload coverage report
        uses: codecov/codecov-action@v5.0.7
